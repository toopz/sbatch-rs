mod display;
mod validate;

use thiserror::Error;

/// Represents an sbatch option
///
/// For a full description of the sbatch options, see the slurm documentation: <https://slurm.schedmd.com/sbatch.html>
/// The `SbatchOption` enum variants store Nothing, `String`, or Option<`String`> where appropriate.
/// For more complex options, such as `--dependency`, the helper `Dependency` struct can be used to format the string.
#[derive(Debug, Clone, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub enum SbatchOption {
    Account(String),
    AcctgFreq(String),
    Array(String),
    Batch(String),
    Bb(String),
    Bbf(String),
    Begin(String),
    Chdir(String),
    ClusterConstraint(String),
    Clusters(String),
    Comment(String),
    Constraint(String),
    Container(String),
    ContainerID(String),
    Contiguous,
    CoreSpec(String),
    CoresPerSocket(String),
    CPUFreq(String),
    CPUsPerGPU(String),
    CPUsPerTask(String),
    Deadline(String),
    DelayBoot(String),
    Dependency(String),
    Distribution(String),
    Error(String),
    Exclude(String),
    Exclusive(Option<String>),
    Export(String),
    ExportFile(String),
    Extra(String),
    ExtraNodeInfo(String),
    GetUserEnv(Option<String>),
    GID(String),
    GPUBind(String),
    GPUFreq(String),
    GPUs(String),
    GPUsPerNode(String),
    GPUsPerSocket(String),
    GPUsPerTask(String),
    Gres(String),
    GresFlags(String),
    Help,
    Hint(String),
    Hold,
    IgnorePbs,
    Input(String),
    JobName(String),
    KillOnInvalidDep(String),
    Licenses(String),
    MailType(String),
    MailUser(String),
    McsLabel(String),
    Mem(String),
    MemBind(String),
    MemPerCPU(String),
    MemPerGPU(String),
    MinCPUs(String),
    Network(String),
    Nice(Option<String>),
    NoKill(Option<String>),
    NoRequeue,
    NodeFile(String),
    NodeList(String),
    Nodes(String),
    NTasks(String),
    NTasksPerCore(String),
    NTasksPerGPU(String),
    NTasksPerNode(String),
    NTasksPerSocket(String),
    OOMKillStep(Option<String>),
    OpenMode(String),
    Output(String),
    Overcommit,
    Oversubscribe,
    Parsable,
    Partition(String),
    Prefer(String),
    Priority(String),
    Profile(String),
    Propagate(Option<String>),
    Qos(String),
    Quiet,
    Reboot,
    Requeue,
    Reservation(String),
    ResvPorts(Option<String>),
    Segment(String),
    Signal(String),
    SocketsPerNode(String),
    SpreadJob,
    Stepmgr,
    Switches(String),
    TestOnly,
    ThreadSpec(String),
    ThreadsPerCore(String),
    Time(String),
    TimeMin(String),
    Tmp(String),
    TresBind(String),
    TresPerTask(String),
    UID(String),
    Usage,
    UseMinNodes,
    Verbose,
    Version,
    Wait,
    WaitAllNodes(String),
    WCKey(String),
    Wrap(String),
}

#[derive(Debug, Error)]
pub enum SbatchOptionError {
    #[error("Empty string")]
    EmptyString,
    #[error("Leading or trailing spaces")]
    LeadingOrTrailingSpaces,
}
